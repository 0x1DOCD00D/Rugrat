/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RunBySettingConfig.java
 *
 * Created on Jun 24, 2011, 6:38:23 AM
 */
package uiComponents;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;

import ragDB.common.main.Main;
import javax.swing.JOptionPane;
/**
 * Run DBUtil using Default Configuration
 * @author Arthi
 */
public class RunBySettingConfig extends javax.swing.JFrame {

    /** Creates new form RunBySettingConfig */
    public RunBySettingConfig() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jCheckBox5 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Set Config Properties");

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel1.setText("Set parameters for Generating Queries");

        jButton1.setText("Generate Queries");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Number of Tables               ");

        jTextField1.setName("Number of Tables"); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Range of attributes");

        jLabel4.setText("Min");

        jTextField2.setName("Min attributes"); // NOI18N

        jLabel5.setText("Max");

        jTextField3.setName("Max attributes"); // NOI18N

        jLabel6.setText("Number of Queries");

        jTextField4.setName("Number of Queries"); // NOI18N
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel7.setText("Select type of Queries");

        jCheckBox1.setText("Select Queries");

        jCheckBox2.setText("Update Queries");

        jCheckBox3.setText("Insert Queries");

        jLabel8.setText("% of keys in Table");

        jTextField5.setName("% of keys in table"); // NOI18N

        jLabel9.setText("Maximum level of nesting");

        jTextField6.setName("Max level of nesting"); // NOI18N

        jLabel10.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel10.setText("Database system properties :");

        jLabel11.setText("Maximum nesting allowed in DB system");

        jTextField7.setText("32");
        jTextField7.setName("Max nesting allowed in DB"); // NOI18N

        jLabel12.setText("Maximum tables allowed in a single query");

        jTextField9.setText("91");
        jTextField9.setName("Max tables allowed in single query"); // NOI18N

        jCheckBox4.setText("Create the tables used for building queries in the database");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jLabel13.setText("Database Connection Username");

        jTextField8.setEditable(false);

        jLabel14.setText("Database Connection Password");

        jTextField10.setEditable(false);

        jLabel15.setText("Database Connection URL");

        jTextField11.setEditable(false);

        jLabel16.setText("Database Connection Name");

        jTextField12.setEditable(false);

        jLabel17.setText("Database Connection Driver");

        jTextField13.setEditable(false);

        jCheckBox5.setText("Do not use randomly generated constant values in select queries ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(261, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox3)
                                .addComponent(jCheckBox2)
                                .addComponent(jCheckBox1)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(60, 60, 60)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField4)
                                        .addComponent(jTextField1)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE))
                                .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(21, 21, 21)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(41, 41, 41)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField9)
                                        .addComponent(jTextField7)
                                        .addComponent(jTextField13, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                        .addComponent(jTextField11)
                                        .addComponent(jTextField10)
                                        .addComponent(jTextField8, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                        .addComponent(jTextField12))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)))
                            .addGap(296, 296, 296)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(290, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jCheckBox5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11))
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        processInputs();
    }

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {
        if(jCheckBox4.isSelected()){
            jTextField8.setEditable(true);
            jTextField10.setEditable(true);
            jTextField11.setEditable(true);
            jTextField12.setEditable(true);
            jTextField13.setEditable(true);
        }
        else{
            jTextField8.setEditable(false);
            jTextField8.setText("");
            jTextField10.setEditable(false);
            jTextField10.setText("");
            jTextField11.setEditable(false);
            jTextField11.setText("");
            jTextField12.setEditable(false);
            jTextField12.setText("");
            jTextField13.setEditable(false); 
            jTextField13.setText("");
        }
           
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new RunBySettingConfig().setVisible(true);
            }
        });
    }
    
    private void processInputs(){
          HashMap<String,String> valuesToWrite = new HashMap<String,String>();
          ArrayList<String> notInFormat = new ArrayList<String>();
          ArrayList<String> cannotBeZero = new ArrayList<String>();
          
          String jTextField1value = jTextField1.getText();
          if(!checkValidNumber(jTextField1value)){
              notInFormat.add(jTextField1.getName());
          }
          else{
              if(Integer.parseInt(jTextField1value) == 0)
              cannotBeZero.add(jTextField1.getName());
          }
          valuesToWrite.put("NumOfTables", jTextField1value);
          
          String jTextField2value = jTextField2.getText();
           if(!checkValidNumber(jTextField2value)){
              notInFormat.add(jTextField2.getName());
          }
            else{
              if(Integer.parseInt(jTextField2value) == 0)
              cannotBeZero.add(jTextField2.getName());
          }
          valuesToWrite.put("MinAttributes", jTextField1value);
          
          
           String jTextField3value = jTextField3.getText();
           if(!checkValidNumber(jTextField3value)){
              notInFormat.add(jTextField3.getName());
          }
            else{
              if(Integer.parseInt(jTextField3value) == 0)
              cannotBeZero.add(jTextField3.getName());
          }
          valuesToWrite.put("MaxAttributes", jTextField1value);
          
           String jTextField4value = jTextField4.getText();
           if(!checkValidNumber(jTextField4value)){
              notInFormat.add(jTextField4.getName());
          }
            else{
              if(Integer.parseInt(jTextField4value) == 0)
              cannotBeZero.add(jTextField4.getName());
          }
          valuesToWrite.put("NumOfQueries", jTextField4value);
          
          boolean oneChecked = false;
          
          if(jCheckBox1.isSelected()){
              oneChecked = true;
              valuesToWrite.put("selectQ","yes");
          }
          else{
              valuesToWrite.put("selectQ","no");
          }
          if(jCheckBox2.isSelected()){
              oneChecked = true;
              valuesToWrite.put("updateQ","yes");
          }
          else{
              valuesToWrite.put("updateQ","no");
          }
          
          if(jCheckBox3.isSelected()){
              oneChecked = true;
              valuesToWrite.put("insertQ","yes");
          }
          else{
              valuesToWrite.put("insertQ","no");
          }
          
          if(oneChecked == false){
              String labelString = "Please select atleast one query type";
              JOptionPane.showMessageDialog(this,labelString,"validation error", JOptionPane.ERROR_MESSAGE);
              return;
          }
          
          String jTextField5value = jTextField5.getText();
           if(!checkValidNumber(jTextField5value)){
              notInFormat.add(jTextField5.getName());
          }
          valuesToWrite.put("PercentageOfkeys", jTextField5value);
          
          String jTextField6value = jTextField6.getText();
           if(!checkValidNumber(jTextField6value)){
              notInFormat.add(jTextField6.getName());
          }
          valuesToWrite.put("NestingLevel", jTextField6value);
          
          String jTextField7value = jTextField7.getText();
           if(!checkValidNumber(jTextField7value)){
              notInFormat.add(jTextField7.getName());
          }
          valuesToWrite.put("Nesting.Maximum", jTextField7value);
          
           String jTextField9value = jTextField9.getText();
           if(!checkValidNumber(jTextField9value)){
              notInFormat.add(jTextField9.getName());
          }
          valuesToWrite.put("TablesInQ.Maximum", jTextField9value);
          
          if(jCheckBox4.isSelected()){
              valuesToWrite.put("ExecuteINDB.flag","true" );
              valuesToWrite.put("db.connUsername",jTextField8.getText());
              valuesToWrite.put("db.connPassword",jTextField10.getText());
              valuesToWrite.put("db.connUrl",jTextField11.getText());
              valuesToWrite.put("db.connName",jTextField12.getText());
              valuesToWrite.put("db.connDriver",jTextField13.getText());
          }
          else{
              valuesToWrite.put("ExecuteINDB.flag","false" );
          }
          
          if(jCheckBox5.isSelected()){
              valuesToWrite.put("selectQ.useConstantValue","true" );
          }
          else{
              valuesToWrite.put("selectQ.useConstantValue","false" );
          }
          
          if(!notInFormat.isEmpty()){
              Object[] objects = notInFormat.toArray();
              JOptionPane.showMessageDialog(this,objects,"Positive Integer values Expected - ", JOptionPane.ERROR_MESSAGE);
              return;
          }
          else if(!cannotBeZero.isEmpty()){
              Object[] objects = cannotBeZero.toArray();
              JOptionPane.showMessageDialog(this,objects,"Non-zero Values Expected -  ", JOptionPane.ERROR_MESSAGE);
              return;
          }
          else{
              writeToXML(valuesToWrite);
              String[] args = {};
              String displayString = "Generation of tables and queries started";
              JOptionPane.showMessageDialog(this,displayString,"Information",JOptionPane.INFORMATION_MESSAGE);
              this.setVisible(false);
              Main.main(args);
              System.exit(0);
          }    
    }
    
    private void writeToXML(HashMap<String,String> valuesToWrite){
        
        String configString = getConfigString(valuesToWrite);
        
        File configFile = new File("config.properties");
        BufferedOutputStream bufferedStream = null;
        try{
            if(configFile.createNewFile()){
                System.out.println("Creating config.properties file");
            }
                FileOutputStream outstream = new FileOutputStream(configFile);
                bufferedStream = new BufferedOutputStream(outstream);
                bufferedStream.write(configString.getBytes());
        }
        catch(IOException ioe){
            System.out.println("Error while creating config.properties file");
            ioe.printStackTrace();
        }
        finally{
        if(bufferedStream != null)
        {
            try{
               bufferedStream.flush(); 
               bufferedStream.close();
            }
            catch (IOException e){
                System.out.println("Error while creating config.properties file");
                e.printStackTrace();
            }
        }  
    }
    }
    
    
    private String getConfigString(HashMap<String,String> valuesToWrite){
       StringBuilder configStringSB = new StringBuilder();
       
       //Setting default values
       configStringSB.append("flagInsert.nested=0"+"\n");
       configStringSB.append("flagUpdate.nested=0"+"\n");
       configStringSB.append("flag.nested=0"+"\n");
       configStringSB.append("Update.NeededSelectQ=0"+"\n");
       configStringSB.append("simpleOperators.String=||"+"\n");
       configStringSB.append("simpleOperators.Numbers==,!=,<,<=,>=,>"+"\n");
       configStringSB.append("parameter.dataTypes=int,float,char,varchar"+"\n");
       configStringSB.append("joinQuery.Types=join,left join,right join"+"\n");
       configStringSB.append("onExprOperator.Types==,!=,<,>,<=,>=,||"+"\n");
       configStringSB.append("query.Types=select,update,insert"+"\n");

      Iterator it = valuesToWrite.entrySet().iterator();
      while (it.hasNext()) {
        Object element = it.next();
        configStringSB.append(element.toString()).append("\n"); 
    } 

       String configString = configStringSB.toString();
       return configString;
    }
    
    private boolean checkValidNumber(String value){
        try{
            Integer.valueOf(value);
            if(Integer.parseInt(value)<0){
                throw new NumberFormatException();
            }
        }
        catch(NumberFormatException exception){
           return false; 
        }
            return true;
    }
    
    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration
}